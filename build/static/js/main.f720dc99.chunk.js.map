{"version":3,"sources":["assets/commerce.png","components/NavBar/styles.js","components/NavBar/NavBar.js","components/Products/Product/styles.js","components/Products/Product/Product.js","components/Products/styles.js","components/Products/Products.js","components/Cart/styles.js","components/Cart/CartItem/styles.js","components/Cart/CartItem/CartItem.js","components/Cart/Cart.js","lib/commerce.js","components/CheckoutForm/AddressForm.js","components/CheckoutForm/Review.js","components/CheckoutForm/PaymentForm.js","components/CheckoutForm/Checkout/styles.js","components/CheckoutForm/Checkout/Checkout.js","App.js","index.js"],"names":["makeStyles","theme","appBar","boxShadow","borderBottom","breakpoints","up","width","marginLeft","title","flexGrow","alignItems","display","textDecoration","image","marginRight","menuButton","spacing","grow","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","padding","height","pointerEvents","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","totalItems","classes","useStyles","location","useLocation","AppBar","className","Toolbar","Typography","component","Link","to","variant","src","logo","alt","pathname","button","IconButton","aria-label","Badge","badgeContent","ShoppingCart","root","maxWidth","media","paddingTop","cardActions","cardContent","Product","product","onAddToCart","Card","CardMedia","source","name","CardContent","gutterBottom","price","formatted_with_symbol","dangerouslySetInnerHTML","__html","description","CardActions","disableSpacing","onClick","id","AddShoppingCart","toolbar","mixins","content","background","default","Products","products","Grid","container","justify","map","item","xs","sm","md","lg","marginTop","marginBottom","emptyButton","minWidth","down","checkoutButton","link","cardDetails","cartActions","buttons","CartItem","onUpdateCartQty","onRemoveFromCart","line_total","Button","type","size","quantity","Cart","cart","onEmptyCart","EmptyCart","FilledCart","line_items","subtotal","Container","length","commerce","Commerce","process","AddressForm","checkoutToken","next","useForm","register","handleSubmit","errors","watch","formState","useState","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","methods","fetchShippingCountries","checkoutTokenId","a","services","localeListShippingCountries","countries","Object","keys","useEffect","onSubmit","data","TextField","required","label","fullWidth","exampleRequired","InputLabel","Select","value","onChange","e","target","entries","MenuItem","style","Review","List","disablePadding","live","ListItem","ListItemText","primary","secondary","fontWeight","stripePromise","loadStripe","PaymentForm","shippingData","backStep","nextStep","console","log","Divider","margin","stripe","elements","disabled","layout","paper","stepper","divider","spinner","steps","Checkout","setCheckoutToken","activeStep","setActiveStep","setShippingData","useHistory","checkout","generateToken","token","prevActiveState","Confirmation","Form","Paper","align","Stepper","Step","StepLabel","App","setProducts","setCart","fetchProducts","list","res","fetchCart","retrieve","handleAddToCart","productId","add","handleUpdateCartQty","lineItemId","update","handleRemoveFromCart","remove","handleEmptyCart","empty","total_items","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f720dc99.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/commerce.2b0ede93.png\";","import { makeStyles, fade } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 0;\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        boxShadow: 'none',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        textDecoration: 'none',\r\n    },\r\n    image: {\r\n        marginRight: '10px',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}));","import React from 'react'\r\nimport { Menu, MenuItem, Badge, Toolbar, AppBar, IconButton, Typography } from '@material-ui/core';\r\nimport { ShoppingCart } from '@material-ui/icons';\r\n// import classes from '*.module.css';\r\nimport logo from '../../assets/commerce.png';\r\nimport useStyles from './styles';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst NavBar = ({ totalItems }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar position='fixed' className={classes.appBar} color='inherit'>\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color='inherit'>\r\n                        <img src={logo} alt='E-commerce' height='25px' className={classes.image} />\r\n                        E-commerce\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' &&\r\n                        <div className={classes.button} >\r\n                            <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color='inherit' >\r\n                                <Badge badgeContent={totalItems} color='secondary'>\r\n                                    <ShoppingCart />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </div>}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    root: {\r\n        maxWidth: '100%',\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '60%',\r\n\r\n    },\r\n    cardActions: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    cardContent: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n}));","import React from 'react'\r\nimport { Card, CardMedia, CardContent, CardActions, Typography, IconButton } from '@material-ui/core';\r\nimport { AddShoppingCart } from '@material-ui/icons';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Product = ({ product, onAddToCart }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardMedia className={classes.media} image={product.media.source} title={product.name} />\r\n            <CardContent>\r\n                <div className={classes.cardContent}>\r\n                    <Typography variant=\"h5\" gutterBottom >\r\n                        {product.name}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\"  >\r\n                        {product.price.formatted_with_symbol}\r\n                    </Typography>\r\n\r\n                </div>\r\n                <Typography dangerouslySetInnerHTML={{ __html: product.description }} variant=\"body2\" color=\"textSecondary\" />\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing className={classes.cardActions} >\r\n                <IconButton aria-label=\"Add to Cart\" onClick={() => onAddToCart(product.id, 1)}>\r\n                    <AddShoppingCart />\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport Product from \"./Product/Product\";\r\nimport useStyles from './styles';\r\n\r\n\r\n\r\nconst Products = ({ products, onAddToCart }) => {\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Grid container justify='center' spacing={8}>\r\n\r\n        {products.map((product) => (\r\n          <Grid item key={product.id} xs={12} sm={6} md={4} lg={3} >\r\n            <Product product={product} onAddToCart={onAddToCart} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </main >\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    title: {\r\n        marginTop: '2%',\r\n        marginBottom: '5%'\r\n    },\r\n    emptyButton: {\r\n        minWidth: '150px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginBottom: '5px',\r\n        },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginRight: '20px',\r\n        },\r\n    },\r\n    checkoutButton: {\r\n        minWidth: '150px',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n    cardDetails: {\r\n        display: 'flex',\r\n        marginTop: '10%',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n    },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    media: {\r\n        height: 220,\r\n    },\r\n    cardContent: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    cartActions: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));","import React from 'react'\r\n\r\nimport { Card, CardActions, CardContent, CardMedia, Grid, Button, Typography } from '@material-ui/core';\r\nimport useStyles from './styles';\r\n\r\n\r\n\r\nconst CartItem = ({ item, onUpdateCartQty, onRemoveFromCart }) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardMedia image={item.media.source} alt={item.name} className={classes.media} />\r\n            <CardContent className={classes.cardContent}>\r\n                <Typography variant=\"h4\">{item.name} </Typography>\r\n                <Typography variant=\"h5\">{item.line_total.formatted_with_symbol}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <div className={classes.buttons}>\r\n                    <Button type=\"button\" size=\"small\" onClick={() => onUpdateCartQty(item.id, item.quantity - 1)} >-</Button>\r\n                    <Typography>&nbsp;{item.quantity}&nbsp;</Typography>\r\n                    <Button type=\"button\" size=\"small\" onClick={() => onUpdateCartQty(item.id, item.quantity + 1)}>+</Button>\r\n                </div>\r\n                <Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={() => onRemoveFromCart(item.id)}>Remove</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import React, { Fragment } from 'react'\r\n\r\nimport { Container, Grid, Button, Typography } from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\nimport CartItem from './CartItem/CartItem';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Cart = ({ cart, onUpdateCartQty, onRemoveFromCart, onEmptyCart }) => {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const EmptyCart = () => (\r\n        <Typography variant=\"subtitle1\">\r\n            You have no items in your shopping cart yet,\r\n            <Link to='/' className={classes.link}> start adding some items!</Link>\r\n        </Typography>\r\n    )\r\n\r\n    const FilledCart = () => (\r\n        <Fragment>\r\n            <Grid container spacing={3}>\r\n\r\n                {cart.line_items.map((item) => (\r\n                    <Grid item xs={12} sm={4} key={item.id}>\r\n                        <CartItem item={item} onUpdateCartQty={onUpdateCartQty} onRemoveFromCart={onRemoveFromCart} />\r\n\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <div className={classes.cardDetails}>\r\n                <Typography variant=\"h4\">\r\n                    Subtotal: {cart.subtotal.formatted_with_symbol}\r\n                </Typography>\r\n                <div>\r\n                    <Button className={classes.emptyButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"secondary\" onClick={onEmptyCart}>\r\n                        Empty Cart\r\n                    </Button>\r\n                    <Button component={Link} to=\"/checkout\" className={classes.checkoutButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"primary\">\r\n                        Checkout\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n\r\n    if (!cart.line_items) return \"Loading...\"\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <div className={classes.toolbar} />\r\n            <Typography className={classes.title} variant=\"h4\" gutterBottom >Your Shopping Cart</Typography>\r\n            {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import Commerce from '@chec/commerce.js';\r\n\r\nexport const commerce = new Commerce(process.env.REACT_APP_CHEC_PUBLIC_KEY, true);\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography, TextField } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\n\r\n\r\n\r\n// const AddressForm = ({ checkoutToken, test }) => {\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n\r\n\r\n\r\n\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n        // console.log(countries)\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    };\r\n\r\n    // const fetchSubdivisions = async (countryCode) => {\r\n    //     const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    //     setShippingSubdivisions(subdivisions);\r\n    //     setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    // };\r\n\r\n    // const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    //     const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    //     setShippingOptions(options);\r\n    //     setShippingOption(options[0].id);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // console.log(checkoutToken)\r\n        fetchShippingCountries(checkoutToken.id);\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    // }, [shippingCountry]);\r\n\r\n    // useEffect(() => {\r\n    //     if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    // }, [shippingSubdivision]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n\r\n            <FormProvider {...methods}>\r\n                {/* <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry }))} > */}\r\n                <form onSubmit={handleSubmit((data) => next({ ...data, shippingCountry }))} >\r\n                    <Grid container spacing={3} >\r\n                        <Grid item xs={12} sm={6}>\r\n\r\n                            <TextField required label=\"First name\" fullWidth  {...register(\"firstName\")} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n\r\n                            <TextField required label=\"Last name\" fullWidth  {...register(\"lastName\")} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n\r\n                            <TextField required label=\"Address\" fullWidth  {...register(\"address\")} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n\r\n                            <TextField required label=\"City\" fullWidth  {...register(\"city\")} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n\r\n                            <TextField required label=\"Email\" fullWidth  {...register(\"email\")} />\r\n                        </Grid>\r\n                        {errors.exampleRequired && <span>This field is required</span>}\r\n\r\n                        {/* <FormInput required name=\"firstName\" label=\"First name\" />\r\n                        <FormInput required name=\"lastName\" label=\"Last name\" />\r\n                        <FormInput required name=\"address1\" label=\"Address\" />\r\n                        <FormInput required name=\"email\" label=\"Email\" />\r\n                        <FormInput required name=\"city\" label=\"City\" />\r\n                        <FormInput required name=\"zip\" label=\"Zip / Postal code\" /> */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                                    <MenuItem key={item.id} value={item.id}>\r\n                                        {item.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n\r\n                            </Select>\r\n                        </Grid>\r\n                        {/* <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Area</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth >\r\n                                <MenuItem key={ } value={ }\r\n                                    Select Me>\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth >\r\n                                <MenuItem key={ } value={ }\r\n                                    Select Me>\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n\r\n        </>\r\n\r\n        // <div>\r\n        // <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n        //     <FormProvider {...methods}>\r\n        //         <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n        //             <Grid container spacing={3}>\r\n        //                 <FormInput required name=\"firstName\" label=\"First name\" />\r\n        // <FormInput required name=\"lastName\" label=\"Last name\" />\r\n        // <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n        // <FormInput required name=\"email\" label=\"Email\" />\r\n        // <FormInput required name=\"city\" label=\"City\" />\r\n        // <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n        //                 <Grid item xs={12} sm={6}>\r\n        //                     <InputLabel>Shipping Country</InputLabel>\r\n        // <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n        // {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n        //     <MenuItem key={item.id} value={item.id}>\r\n        //         {item.label}\r\n        //     </MenuItem>\r\n        // ))}\r\n        //                     </Select>\r\n        //                 </Grid>\r\n        //                 <Grid item xs={12} sm={6}>\r\n        //                     <InputLabel>Shipping Subdivision</InputLabel>\r\n        //                     <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n        //                         {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n        //                             <MenuItem key={item.id} value={item.id}>\r\n        //                                 {item.label}\r\n        //                             </MenuItem>\r\n        //                         ))}\r\n        //                     </Select>\r\n        //                 </Grid>\r\n        //                 <Grid item xs={12} sm={6}>\r\n        //                     <InputLabel>Shipping Options</InputLabel>\r\n        //                     <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n        //                         {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n        //                             <MenuItem key={item.id} value={item.id}>\r\n        //                                 {item.label}\r\n        //                             </MenuItem>\r\n        //                         ))}\r\n        //                     </Select>\r\n        //                 </Grid>\r\n        //             </Grid>\r\n        //             <br />\r\n        //             <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        //                 <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n        //                 <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n        //             </div>\r\n        //         </form>\r\n        //     </FormProvider>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default AddressForm;","import React from 'react';\r\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\nconst Review = ({ checkoutToken }) => (\r\n    <>\r\n        <Typography variant=\"h6\" gutterBottom>Order summary</Typography>\r\n        <List disablePadding>\r\n            {checkoutToken.live.line_items.map((product) => (\r\n                <ListItem style={{ padding: '10px 0' }} key={product.name}>\r\n                    <ListItemText primary={product.name} secondary={`Quantity: ${product.quantity}`} />\r\n                    <Typography variant=\"body2\">{product.line_total.formatted_with_symbol}</Typography>\r\n                </ListItem>\r\n            ))}\r\n            <ListItem style={{ padding: '10px 0' }}>\r\n                <ListItemText primary=\"Total\" />\r\n                <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\r\n                    {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                </Typography>\r\n            </ListItem>\r\n        </List>\r\n    </>\r\n);\r\n\r\nexport default Review;","import React, { useEffect } from 'react'\r\nimport { Typography, Divider, Button } from '@material-ui/core';\r\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nimport Review from './Review';\r\n\r\n// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nconst stripePromise = loadStripe(\"...\");\r\n\r\nconst PaymentForm = ({ shippingData, checkoutToken, backStep, nextStep }) => {\r\n\r\n    useEffect(() => {\r\n        console.log(shippingData)\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Review checkoutToken={checkoutToken} />\r\n            <Divider />\r\n            <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0' }}>Payment method</Typography>\r\n            <Elements stripe={stripePromise}>\r\n                <ElementsConsumer>{({ elements, stripe }) => (\r\n                    //   <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n                    <form >\r\n                        <CardElement />\r\n                        <br /> <br />\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Button variant=\"outlined\" onClick={backStep}>Back</Button>\r\n                            <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\" onClick={nextStep} >\r\n                                Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n                </ElementsConsumer>\r\n            </Elements>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentForm\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    layout: {\r\n        marginTop: '5%',\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%',\r\n            marginTop: 60,\r\n        },\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    divider: {\r\n        margin: '20px 0',\r\n    },\r\n    spinner: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, Grid } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../../lib/commerce';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\nimport useStyles from './styles';\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n\r\n// const Checkout = ({ cart, onCaptureCheckout, order, error }) => {\r\nconst Checkout = ({ cart }) => {\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    // const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    // const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (cart.id) {\r\n            const generateToken = async () => {\r\n                try {\r\n                    //Here we have acces to all the products in the cart\r\n                    const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n                    // console.log(token)\r\n                    // console.log(cart)\r\n                    setCheckoutToken(token);\r\n                } catch {\r\n                    // if (activeStep !== steps.length) history.push('/');\r\n                }\r\n            };\r\n\r\n            generateToken();\r\n        }\r\n    }, [cart]);\r\n\r\n    const nextStep = () => setActiveStep((prevActiveState) => prevActiveState + 1);\r\n    const backStep = () => setActiveStep((prevActiveState) => prevActiveState - 1);\r\n\r\n    const next = (data) => {\r\n        console.log(data)\r\n        setShippingData(data)\r\n        nextStep();\r\n    }\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true)\r\n        }, 3000);\r\n    }\r\n\r\n    // const test = (data) => {\r\n    //     setShippingData(data);\r\n\r\n    //     nextStep();\r\n    // };\r\n\r\n    // let Confirmation = () => (order.customer ? (\r\n    //     <>\r\n    //         <div>\r\n    //             <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n    //             <Divider className={classes.divider} />\r\n    //             <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n    //         </div>\r\n    //         <br />\r\n    //         <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    //     </>\r\n    // ) : (\r\n    //     <div className={classes.spinner}>\r\n    //         <CircularProgress />\r\n    //     </div>\r\n    // ));\r\n\r\n    // if (error) {\r\n    //     Confirmation = () => (\r\n    //         <>\r\n    //             <Typography variant=\"h5\">Error: {error}</Typography>\r\n    //             <br />\r\n    //             <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    //         </>\r\n    //     );\r\n    // }\r\n\r\n    const Confirmation = () => (\r\n        <Grid >\r\n            <Typography variant='h5'>\r\n                Paying service is not available yet in your country.\r\n               \r\n            </Typography>\r\n            <div style={{ marginTop: '10%' }}>\r\n                <Button component={Link} to=\"/\"  variant='outlined'>Go back to home page</Button>\r\n                </div>\r\n        </Grid>\r\n\r\n    )\r\n\r\n    const Form = () => (activeStep === 0 ?\r\n        < AddressForm checkoutToken={checkoutToken} next={(data) => next(data)} /> :\r\n        <PaymentForm shippingData={shippingData} nextStep={nextStep} checkoutToken={checkoutToken} backStep={backStep} />);\r\n    // ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\r\n    // : <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout} />);\r\n\r\n    return (\r\n        <>\r\n            {/* <CssBaseline /> */}\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Checkout;","import React, { useState, useEffect } from 'react'\r\n// import Products from './components/Products/Products';\r\n// import NavBar from './components/NavBar/NavBar';\r\n\r\nimport { Products, NavBar, Cart, Checkout } from './components';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { commerce } from './lib/commerce' // this is like backend with my API key;\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [cart, setCart] = useState({})\r\n\r\n\r\n    const fetchProducts = async () => {\r\n        const res = await commerce.products.list();\r\n        setProducts(res.data);\r\n    }\r\n\r\n    const fetchCart = async () => {\r\n        const res = await commerce.cart.retrieve();\r\n        // console.log(res)\r\n        // alert(1)\r\n        setCart(res);\r\n    }\r\n\r\n    const handleAddToCart = async (productId, quantity) => {\r\n        const res = await commerce.cart.add(productId, quantity);\r\n\r\n        setCart(res.cart)\r\n    }\r\n\r\n\r\n    const handleUpdateCartQty = async (lineItemId, quantity) => {\r\n        const res = await commerce.cart.update(lineItemId, { quantity });\r\n\r\n        setCart(res.cart);\r\n    };\r\n\r\n    const handleRemoveFromCart = async (lineItemId) => {\r\n        const res = await commerce.cart.remove(lineItemId);\r\n\r\n        setCart(res.cart);\r\n    };\r\n\r\n\r\n    const handleEmptyCart = async () => {\r\n        const res = await commerce.cart.empty();\r\n\r\n        setCart(res.cart);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n        fetchCart();\r\n    }, [])\r\n\r\n    // console.log(cart)\r\n\r\n    return (\r\n        <Router>\r\n            <NavBar totalItems={cart.total_items} />\r\n            <Switch>\r\n                <Route exact path='/'>\r\n                    <Products products={products} onAddToCart={handleAddToCart} />\r\n\r\n                </Route>\r\n                <Route exact path='/cart'>\r\n                    <Cart cart={cart} onUpdateCartQty={handleUpdateCartQty} onRemoveFromCart={handleRemoveFromCart} onEmptyCart={handleEmptyCart} />\r\n                </Route>\r\n                <Route exact path='/checkout'>\r\n                    <Checkout cart={cart} />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}